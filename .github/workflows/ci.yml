# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI Transfermarkt

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches:
      - 'main'
      - 'feature/*'
  pull_request:
    branches:
      - 'main'

  # Allow manually trigger
  workflow_dispatch: {}

jobs:
  Quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python 3.10.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.8

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Configure Poetry
        shell: bash
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.create true
          poetry config virtualenvs.path .venv

      - name: View Poetry version
        shell: bash
        run: |
          poetry --version

      - name: Install Dependencies
        run: |
          poetry install

      - name: Analyze Syntax
        run: |
          poetry run python -m invoke lint

      - name: Run Tests
        run: |
          poetry run python -m invoke cov

      - name: Report Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}


  Release:
    needs: Quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python 3.10.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.8

      - name: Checkout
        uses: actions/checkout@v2

      - name: Semantic Release
        run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish
